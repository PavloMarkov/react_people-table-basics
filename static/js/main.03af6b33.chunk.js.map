{"version":3,"sources":["components/HomePage.tsx","components/HeaderNavLink.tsx","components/Navbar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNotFound.tsx","App.tsx","index.tsx"],"names":["HomePage","className","HeaderNavLink","props","to","text","isActive","classNames","Navbar","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","isSelected","selectedSlug","slug","sex","name","born","died","motherName","mother","fatherName","father","PeopleTable","people","useParams","map","initPeople","PeoplePage","useState","setPeople","isPeopleLoading","setIsPeopleLoading","hasLoadingError","setHasLoadingError","isData","setIsData","useEffect","res","catch","finally","peopleToShow","_","arr","personMother","find","parent","personFather","length","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.03af6b33.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const HeaderNavLink: React.FC<Props> = (props) => {\n  const { to, text } = props;\n\n  return (\n    <NavLink\n      className={({ isActive }) => classNames('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { HeaderNavLink } from './HeaderNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <HeaderNavLink\n          to=\"/\"\n          text=\"Home\"\n        />\n\n        <HeaderNavLink\n          to=\"/people\"\n          text=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person;\n  selectedSlug: string;\n};\n\nexport const PersonLink: FC<Props> = (props) => {\n  const { person, selectedSlug } = props;\n  const isSelected = selectedSlug === person.slug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={isSelected\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <NavLink\n          to={`/people/${person.slug}`}\n          className={classNames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.motherName && (person.mother ? (\n          <NavLink\n            to={`/people/${person.mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {person.mother.name}\n          </NavLink>\n        ) : (person.motherName))}\n        {!person.motherName && (\n          <>-</>\n        )}\n      </td>\n      <td>\n        {person.fatherName && (person.father ? (\n          <NavLink\n            to={`/people/${person.father.slug}`}\n          >\n            {person.father.name}\n          </NavLink>\n        ) : (person.fatherName))}\n        {!person.fatherName && (\n          <>-</>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = (props) => {\n  const { people } = props;\n  const { slug = '/' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      // eslint-disable-next-line max-len\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            key={person.slug}\n            person={person}\n            selectedSlug={slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { Person } from '../types/Person';\nimport { PeopleTable } from './PeopleTable';\n\nconst initPeople: Person[] | [] = [];\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState(initPeople);\n  const [isPeopleLoading, setIsPeopleLoading] = useState(false);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [isData, setIsData] = useState(false);\n\n  useEffect(() => {\n    setIsPeopleLoading(true);\n    getPeople()\n      .then(res => setPeople(res))\n      .catch(() => setHasLoadingError(true))\n      .finally(() => {\n        setIsPeopleLoading(false);\n        setIsData(true);\n      });\n  }, []);\n\n  const peopleToShow = people.map((person, _, arr) => {\n    const personMother = arr\n      .find(parent => parent.name === person.motherName) || null;\n    const personFather = arr\n      .find(parent => parent.name === person.fatherName) || null;\n\n    return ({\n      ...person,\n      mother: personMother,\n      father: personFather,\n    });\n  });\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isPeopleLoading && <Loader />}\n\n          {hasLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && isData && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={peopleToShow} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}